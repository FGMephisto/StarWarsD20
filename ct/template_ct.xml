<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<template name="button_ct_controls_menu" merge="join">
		<button_listitem_text_left_sm>
			<script file="ct/scripts/ct_menu.lua" />
		</button_listitem_text_left_sm>
	</template>

	<template name="number_ct_init">
		<number_ct>
			<displaysign />
			<script>
				function action(draginfo)
					local node = window.getDatabaseNode();
					local rActor = ActorManager.resolveActor(node);
					ActionInit.performRoll(draginfo, rActor, CombatManager.isCTHidden(node));
					return true;
				end
				
				function onDragStart(button, x, y, draginfo)
					return action(draginfo);
				end

				function onDoubleClick(x,y)
					return action();
				end
			</script>
		</number_ct>
	</template>
	<template name="number_ct_save">
		<number_ct>
			<displaysign />
			<script>
				function action(draginfo)
					local rActor = ActorManager.resolveActor(window.getDatabaseNode());
					ActionSave.performRoll(draginfo, rActor, target[1]);
					return true;
				end
				
				function onDragStart(button, x, y, draginfo)
					return action(draginfo);
				end

				function onDoubleClick(x,y)
					return action();
				end
			</script>
		</number_ct>
	</template>
	<template name="number_ct_grapple">
		<number_ct>
			<displaysign />
			<script>
				function action(draginfo)
					local rActor = ActorManager.resolveActor(window.getDatabaseNode());
					local rAction;
					if ActorManager.isPC(rActor) then
						rAction = CharManager.getGrappleRollStructures(rActor, "");
					else
						rAction = {};
						rAction.label = "";
						rAction.modifier = getValue();
						rAction.stat = "strength";
					end
					ActionAttack.performGrappleRoll(draginfo, rActor, rAction);
					return true;
				end
				
				function onDragStart(button, x, y, draginfo)
					return action(draginfo);
				end

				function onDoubleClick(x,y)
					return action();
				end
			</script>
		</number_ct>
	</template>
	
	<template name="number_clientct_wounds">
		<number_ct_static name="wounds">
			<anchored to="healthbase" width="30" height="20">
				<top />
				<right />
			</anchored>
			<script>
				function onValueChanged()
					window.onHealthChanged();
				end
			</script>
		</number_ct_static>
	</template>
	<template name="number_clientct_nonlethal">
		<number_ct_static name="nonlethal">
			<anchored to="wounds" width="30" height="20">
				<top />
				<right anchor="left" offset="-10" />
			</anchored>
			<script>
				function onValueChanged()
					window.onHealthChanged();
				end
			</script>
		</number_ct_static>
	</template>
	<template name="number_clientct_hptemp">
		<number_ct_static name="hptemp">
			<anchored to="nonlethal" width="30" height="20">
				<top />
				<right anchor="left" offset="-10" />
			</anchored>
			<script>
				function onInit()
					if super and super.onInit then
						super.onInit();
					end
					setColor(ColorManager.getUIColor("health_shield"));
				end
				function onValueChanged()
					window.onHealthChanged();
				end
			</script>
		</number_ct_static>
	</template>
	<template name="number_clientct_hp">
		<number_ct_static name="hp">
			<anchored to="hptemp" width="30" height="20">
				<top />
				<right anchor="left" offset="-10" />
			</anchored>
			<script>
				function onValueChanged()
					window.onHealthChanged();
				end
			</script>
		</number_ct_static>
	</template>
</root>
